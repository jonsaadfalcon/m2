
# This YAML is built to work with the `sequence_classification.py` starter script!
#
#   Follow the instructions in that script to modify the `build_my_dataloader` function
#   and fine-tune a BERT model on your own dataset!
#
#
#   Note that some of the fields in this template haven't been filled in yet.
#   Please resolve any empty fields before launching!

# Run Name
run_name: mimiciii-monarch-mixer-1536dim-finetuning

tokenizer_name: bert-base-uncased
max_seq_len: 128
precision: amp_bf16

#task_name: 'mimic'
task_name: 'contract_nli'

# (Optionally) provide a composer checkpoint to use for the starting weights
#load_path: ./local-bert-checkpoints/alt-hyena-lc-resid-bd-mlp-glu-pretrain-c4-w10-ord128-mlm30-lr8e-4-dim1536-bf16-rerun/ep0-ba70000-rank0.pt
load_path: ./local-bert-checkpoints/M2-260M/ep0-ba70000-rank0.pt
# long-context-seq-len-1024

# Model
model:
  name: mosaic_bert
  pretrained_model_name: ${tokenizer_name}
  tokenizer_name: ${tokenizer_name}
  model_config:
    problem_type: multi_label_classification
    num_labels: 50
    
    num_attention_heads: 12 # bert-base default
    num_hidden_layers: 12 # bert-base default
    hidden_size: 1536
    intermediate_size: 6144
    attention_probs_dropout_prob: 0.0 # This must be 0 for Flash Attention with triton to work
    max_position_embeddings: 128

    # use_monarch_attention: True
    # use_simple_hyena: true
    use_alternate_hyena: True
    hyena_long_conv: False
    long_conv_l_max: 128
    long_conv_lam: 0.001 # ignored
    long_conv_kernel_dropout: 0.1 # ignored
    long_conv_kernel_learning_rate: 1e-3
    hyena_lr_pos_emb: 1e-5
    hyena_w: 10
    hyena_wd: 0.1
    hyena_emb_dim: 5
    prenorm: False
    use_silu: False
    use_fast_fftconv: True
    hyena_filter_order: 128

    long_conv_bidirectional: true
    long_conv_circular: false
    long_conv_exp_mod: false
    residual_long_conv: true

    use_glu_mlp: True

    use_monarch_mlp: True
    monarch_mlp_nblocks: 4

    use_positional_encodings: True
    pool_all: False

# Dataloaders (make sure to update these after you modify the starter script!)
train_loader:
  split: train
  tokenizer_name: ${tokenizer_name}
  max_seq_len: ${max_seq_len}
  shuffle: true
  drop_last: true
  num_workers: 8

eval_loader:
  split: validation
  tokenizer_name: ${tokenizer_name}
  max_seq_len: ${max_seq_len}
  shuffle: true
  drop_last: true
  num_workers: 8

# Optimization
scheduler:
  name: linear_decay_with_warmup
  t_warmup: 0.06dur # Warmup to the full LR for 6% of the training duration
  alpha_f: 0.02 # Linearly decay to 0.02x the full LR by the end of the training duration

optimizer:
  name: decoupled_adamw
  lr: 1.0e-5
  betas:
  - 0.9
  - 0.98
  eps: 1.0e-06
  weight_decay: 1.0e-6

# Training duration and evaluation frequency
max_duration: 10ep
eval_interval: 1ep
global_train_batch_size: 16

# System
seed: 17
device_eval_batch_size: 16
device_train_microbatch_size: 16

# Logging
progress_bar: false
log_to_console: true
console_log_interval: 10ba

# Optionally log to W&B
loggers:
  wandb: 
    project: attention
    entity: hazy-research

callbacks:
  speed_monitor:
    window_size: 50
  lr_monitor: {}